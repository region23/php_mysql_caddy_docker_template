FROM php:7.4-fpm

ENV TZ=Europe/Moscow
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

#COPY php.ini /usr/local/etc/php/

# Arguments defined in docker-compose.yml
# ARG user
# ARG uid

# Install dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    mariadb-client \
    libpng-dev \
    libjpeg62-turbo-dev \
    libfreetype6-dev \
    locales \
    zip \
    jpegoptim optipng pngquant gifsicle \
    vim \
    unzip \
    curl \
    libzip-dev \
    zlib1g-dev \
    libicu-dev \
    g++ \
    sudo \
    libz-dev \
    libmemcached-dev \
    sendmail

RUN echo "sendmail_path=/usr/sbin/sendmail -t -i" >> /usr/local/etc/php/conf.d/sendmail.ini

RUN sed -i '/#!\/bin\/sh/aservice sendmail restart' /usr/local/bin/docker-php-entrypoint

RUN sed -i '/#!\/bin\/sh/aecho "$(hostname -i)\t$(hostname) $(hostname).localhost" >> /etc/hosts' /usr/local/bin/docker-php-entrypoint


# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install extensions
RUN docker-php-ext-install pdo_mysql zip exif pcntl bcmath mysqli
RUN docker-php-ext-configure gd --with-freetype --with-jpeg
RUN docker-php-ext-configure intl
RUN docker-php-ext-install gd intl
RUN docker-php-ext-install opcache

RUN pecl install memcached \
    &&  rm -rf /tmp/pear \
    &&  docker-php-ext-enable memcached

RUN pecl install mongodb \
    &&  echo "extension=mongodb.so" > /usr/local/etc/php/conf.d/mongo.ini

RUN apt-get update && apt-get install -y \
    libmagickwand-dev --no-install-recommends \
    && rm -rf /var/lib/apt/lists/* \
    && pecl install imagick \
    && docker-php-ext-enable imagick

# Get latest Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Create system user to run Composer and Artisan Commands
# If user is not root than uncomment next line
# RUN useradd -G www-data,root --uid $uid --home /home/$user $user
# RUN mkdir -p /home/$user/.composer && \
#     chown -R $user:$user /home/$user

# Configure non-root user.
# ARG PUID=1000
# ENV PUID ${PUID}
# ARG PGID=1000
# ENV PGID ${PGID}

# RUN groupmod -o -g ${PGID} www-data && \
#     usermod -o -u ${PUID} -g www-data www-data

ENV DOCKER_USER_ID=501
ENV DOCKER_USER_GID=20
ENV BOOT2DOCKER_ID=1000
ENV BOOT2DOCKER_GID=50
RUN usermod -u ${BOOT2DOCKER_ID} www-data && usermod -G staff www-data && useradd -r mysql && usermod -G staff mysql	
RUN groupmod -g $(($BOOT2DOCKER_GID + 10000)) $(getent group $BOOT2DOCKER_GID | cut -d: -f1)	
RUN groupmod -g ${BOOT2DOCKER_GID} staff

# Use the default production configuration
#RUN mv "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini"
COPY custom.ini $PHP_INI_DIR/conf.d/
COPY opcache.ini $PHP_INI_DIR/conf.d/
COPY zz-docker.conf /usr/local/etc/php-fpm.d/

# Set working directory
WORKDIR /var/www

#USER $user
